#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#include <math.h> // For fabs function

int compare(const void *a, const void *b) {
    return (*(int*)a - *(int*)b);
}

int threeSumClosest(int* nums, int numsSize, int target) {
    if (numsSize < 3) return 0; // Edge case handling
    
    qsort(nums, numsSize, sizeof(int), compare); // Sort the array
    
    int closestSum = nums[0] + nums[1] + nums[2]; // Initialize with the first possible sum

    for (int i = 0; i < numsSize - 2; ++i) {
        int left = i + 1;
        int right = numsSize - 1;
        
        while (left < right) {
            int sum = nums[i] + nums[left] + nums[right];
            if (fabs(sum - target) < fabs(closestSum - target)) {
                closestSum = sum;
            }
            
            if (sum < target) {
                ++left;
            } else if (sum > target) {
                --right;
            } else {
                return sum; // If the exact target sum is found
            }
        }
    }
    
    return closestSum;
}
